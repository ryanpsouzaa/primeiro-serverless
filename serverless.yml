# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: ryanpsouza
# "service" is the name of this project. This will also be added to your AWS resource names.
service: primeiro-serverless

plugins:
  - serverless-offline


params:
  default:
    dbName: ryan-serverless
  dev:
    salt: SJxV9oNKRtEks8un3W3jUZSkHwrxBOdZ
    jwtSecret: UkBN0me9JRvODL8Olb9iszmWxuOYt74OJEeTfFtiajbTScOGL6iFcMjepagitemzj4DqbHtKV6JokQpdZg8u96EHRUklWoQV3HjSm2PlQdC8hekOlSUWZPTjcMn8DvHdFwkkG7FC63N9yRnHQwAPNuNXNWZfoXlZZNbwirr2t7LLUV5rw9uE8CBEghVQt1KWH9284t5RxmVBtDpSSOs3rITMj6Sh8L9m2tu0KwGszdH45Scl2rce4RIS9Qr8fYS3
    connectionString: mongodb://root:root@localhost:27017/ryan-serverless?authSource=admin

provider:
  name: aws
  runtime: nodejs20.x
  environment:
    SALT: ${param:salt}
    JWT_SECRET: ${param:jwtSecret}
    MONGODB_CONNECTIONSTRING: ${param:connectionString}
    MONGODB_DB_NAME: ${param:dbName}

functions:

  getTarefas:
    handler: src/handlers/handler.getTarefas
    timeout: 10
    events:
      - httpApi:
          path: /tarefas
          method: get

  getTarefa:
    handler: src/handlers/handler.getOneTarefa
    events:
      - httpApi:
          path: /tarefas/{id}
          method: get

  postTarefas:
    handler: src/handlers/handler.postTarefas
    events:
      - http:
          path: /tarefas
          method: post

  deleteTarefas:
    handler: src/handlers/handler.deleteTarefa
    events:
      - http:
          path: /tarefas/{id}
          method: delete
  
  putTarefas:
    handler: src/handlers/handler.putTarefa
    events:
      - http:
          path: /tarefas/{id}
          method: put

  tarefaFeita:
    handler: src/handlers/handler.tarefaRealizada
    events:
      - httpApi:
          path: /tarefas/feito/{id}
          method: get
  
